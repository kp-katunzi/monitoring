version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: mini_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2233
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  api:
    build: .
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"
    environment:
      FLASK_ENV: development
      SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://postgres:2233@db:5432/mini_db
      SQLALCHEMY_TRACK_MODIFICATIONS: "false"
    volumes:
      - .:/app
    networks:
      - app-network

  frontend1:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend1
    networks:
      - app-network

  frontend2:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend2
    networks:
      - app-network

  frontend3:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend3
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx-loadbalancer
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend1
      - frontend2
      - frontend3
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
